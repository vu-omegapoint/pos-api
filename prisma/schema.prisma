// Prisma schema file. Documentation: https://pris.ly/d/prisma-schema
// After making changes to this file, you have to run the following command:
// npx prisma migrate dev --name <NAME>
// More details: https://www.prisma.io/docs/getting-started/quickstart.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String        @id @default(uuid())
  name          String
  contactInfo   ContactInfo   @relation(fields: [contactInfoId], references: [id])
  contactInfoId String        @unique
  address       Address       @relation(fields: [addressId], references: [id])
  addressId     String        @unique
  transaction   Transaction[]
}

model ContactInfo {
  id       String    @id @default(uuid())
  email    String
  phone    String
  customer Customer?

  @@unique([email, phone], name: "uniqueContactIdentifier")
}

model Address {
  id       String    @id @default(uuid())
  street   String
  city     String
  state    String
  zip      String
  customer Customer?
}

model Transaction {
  id             String          @id @default(uuid())
  items          Item[]
  customer       Customer        @relation(fields: [customerId], references: [id])
  customerId     String          @unique
  paymentDetails PaymentDetails?
}

model Item {
  id            String       @id @default(uuid())
  entity        ItemEntity   @relation(fields: [entityId], references: [id])
  entityId      String       @unique
  quantity      Int
  price         Decimal
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?      @unique
}

model ItemEntity {
  id    String @id @default(uuid())
  items Item[]
}

model PaymentDetails {
  id            String       @id @default(uuid())
  paymentMethod String // Enums are not supported for SQLite using Prisma
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?      @unique
}
